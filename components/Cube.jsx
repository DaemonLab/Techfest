import React, { useEffect, useCallback, useState } from "react";
import Head from "next/head";
import { Suspense } from "react";
import { Canvas, useLoader, useFrame, act } from "@react-three/fiber";
import { Environment, OrbitControls } from "@react-three/drei";
import { GLTFLoader } from "three/examples/jsm/loaders/GLTFLoader";
import * as THREE from "three";
import window from "global";

const delta = 0.017;
let mixer;
let mixer_reverse;
const animate = () => {};
const Model = () => {
  // location of the 3D model
  const model = useLoader(GLTFLoader, "/cube/cube.gltf");

  if (model.animations.length) {
    mixer = new THREE.AnimationMixer(model.scene);
    model.animations.forEach((clip) => {
      const action = mixer.clipAction(clip);
      action.clampWhenFinished = true;
      action.setLoop(THREE.LoopOnce);
      action.play();
    });
  }

  model.scene.traverse((child) => {
    if (child.isMesh) {
      child.castShadow = true;
      child.receiveShadow = true;
      child.material.side = THREE.FrontSide;
    }
  });
  return (
    <>
      <primitive object={model.scene} scale={0.8} />
    </>
  );
};

export default function Cube() {
  let container;
  useEffect(() => {
    container = document.querySelector(".main_container");
  });
  const [y, setY] = useState(window.scrollY);

  useEffect(() => {
    window.addEventListener("scroll", (e) => {
      const window = e.currentTarget;
      mixer?.update(delta);
      if (y > window.scrollY) {
        mixer?.update(-delta);
        console.log("scrolling up");
      } else {
        console.log("scrolling down");
      }
      setY(window.scrollY);
    });

    return () => {
      window.removeEventListener("scroll", (e) => {
        const window = e.currentTarget;
        // mixer?.update(0);
        mixer?.update(delta);
        if (y > window.scrollY) {
          mixer?.update(-delta);
          console.log("scrolling up");
        } else {
          console.log("scrolling down");
        }
        setY(window.scrollY);
        // mixer?.update(delta);
      });
    };
  });
  return (
    <div className="main_container" style={{ height: "100%", width: "100%" }}>
      <Head>
        <title>Three.js Example</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="globe h-screen w-100" style={{ paddingTop: 0 }}>
        <Canvas shadows dpr={[1, 2]} camera={{ position: [0, 0, 4], fov: 50 }} className="h-100 w-100">
          <ambientLight intensity={1} />
          <spotLight
            intensity={0.5}
            angle={0.1}
            penumbra={1}
            position={[10, 15, 10]}
            castShadow
          />
          <Suspense fallback={null}>
            <Model />
            {/* To add environment effect to the model */}
            <Environment preset="city" />
          </Suspense>
          <OrbitControls enableZoom={false} autoRotate />
        </Canvas>
      </div>
    </div>
  );
}
